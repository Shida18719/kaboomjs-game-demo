{"version":3,"sources":["../src/math.ts","../src/utils.ts","../src/gamepad.json","../src/app.ts","../src/easings.ts","../src/timer.ts","../src/kaboom.ts","src/script.js","../../home/gitpod/.nvm/versions/node/v20.5.1/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["deg2rad","deg","__name","rad2deg","rad","clamp","val","min","max","lerp","a","b","t","Vec2","Color","map","v","l1","h1","l2","h2","mapc","_Vec2","x","y","angle","args","p2","vec2","s","len","normal","on","dest","cos","sin","n","m","other","Rect","__publicField","_Color","r","g","arr","hex","result","h","l","hue2rgb","p","q","rgb","hsl2rgb","Quad","w","quad","Mat4","m0","m1","m4","m5","out","i","j","det","f00","f01","f02","f03","f04","f05","f06","f07","f08","f09","f10","f11","f12","f13","f14","f15","f16","f17","f18","wave","lo","hi","f","A","C","M","RNG","seed","defRNG","randSeed","rand","randi","chance","choose","list","testRectRect","r1","r2","testLineLineT","denom","ua","ub","testLineLine","testRectLine","testRectPoint","pts","Line","pt","testLinePoint","v1","v2","testLineCircle","circle","centerToOrigin","c","dis","t1","t2","testCirclePoint","testCirclePolygon","prev","cur","testPolygonPoint","poly","p1","pos","width","height","Polygon","dx","dy","Circle","center","radius","tr","Ellipse","rx","ry","total","sat","overlap","displacement","axisProj","min1","max1","min2","max2","o","o1","o2","IDList","id","EventController","cancel","events","ev","e","Event","action","res","EventHandler","name","deepEq","k1","k2","k","base64ToArrayBuffer","base64","binstr","bytes","dataURLToArrayBuffer","url","download","filename","downloadText","text","downloadJSON","data","downloadBlob","blob","isDataURL","str","getExt","uid","BinaryHeap","compareFn","item","lastItem","parent","child","index1","index2","gamepad_default","ButtonState","btn","GamepadState","FPSCounter","dt","app_default","opt","state","canvas","time","fps","numFrames","screenshot","setCursor","getCursor","setCursorLocked","isCursorLocked","enterFullscreen","el","exitFullscreen","getFullscreenElement","setFullscreen","isFullscreen","quit","canvasEvents","docEvents","winEvents","resizeObserver","run","accumulatedDt","frame","loopTime","realDt","desiredDt","processInput","resetInput","isTouchscreen","mousePos","mouseDeltaPos","isMousePressed","isMouseDown","isMouseReleased","isMouseMoved","isKeyPressed","isKeyPressedRepeat","isKeyDown","isKeyReleased","isGamepadButtonPressed","isGamepadButtonDown","isGamepadButtonReleased","onResize","onKeyDown","key","onKeyPress","onKeyPressRepeat","onKeyRelease","onMouseDown","mouse","onMousePress","onMouseRelease","onMouseMove","onCharInput","onTouchStart","onTouchMove","onTouchEnd","onScroll","onGamepadButtonDown","onGamepadButtonPress","onGamepadButtonRelease","onGamepadStick","stick","onGamepadConnect","onGamepadDisconnect","getGamepadStick","charInputted","getGamepads","processGamepad","registerGamepad","browserGamepad","gamepad","removeGamepad","gamepadState","stickName","value","MOUSE_BUTTONS","PREVENT_DEFAULT_KEYS","KEY_ALIAS","touches","box","kbGamepad","entries","entry","c2","c3","c4","c5","easings","easings_default","Timer","VERSION","ASCII_CHARS","DEF_ANCHOR","BG_GRID_SIZE","DEF_FONT","DBG_FONT","DEF_TEXT_SIZE","DEF_TEXT_CACHE_SIZE","MAX_TEXT_CACHE_SIZE","FONT_ATLAS_WIDTH","FONT_ATLAS_HEIGHT","SPRITE_ATLAS_WIDTH","SPRITE_ATLAS_HEIGHT","UV_PAD","DEF_HASH_GRID_SIZE","DEF_FONT_FILTER","LOG_MAX","VERTEX_FORMAT","STRIDE","sum","MAX_BATCHED_QUAD","MAX_BATCHED_VERTS","MAX_BATCHED_INDICES","VERT_TEMPLATE","FRAG_TEMPLATE","DEF_VERT","DEF_FRAG","COMP_DESC","COMP_EVENTS","anchorPt","orig","alignPt","align","createEmptyAudioBuffer","ctx","kaboom_default","gopt","root","gscale","fixedSize","cw","ch","pixelDensity","styles","fontCacheCanvas","fontCacheCtx","app","gc","gl","Texture","filter","wrap","img","tex","TexPacker","FrameBuffer","gfx","defShader","makeShader","emptyTex","frameBuffer","bgColor","bgAlpha","vbuf","offset","ibuf","bgTex","SpriteData","frames","anims","slice9","src","assets","slice","loadImg","SoundData","buf","resolve","reject","audio","fetchArrayBuffer","masterNode","burpSnd","burp_default","err","Asset","loader","asset","AssetBucket","handle","loaded","game","make","load","prom","loadProgress","buckets","bucket","loadRoot","path","fetchURL","fetchJSON","fetchText","loadJSON","FontData","face","loadFont","font","loadBitmapFont","gw","gh","makeFont","qw","qh","loadSpriteAtlas","rej","json","atlas","info","spr","createSpriteSheet","images","merged","loadSprite","loadPedit","loadAseprite","imgSrc","jsonSrc","resolveJSON","size","anim","loadShader","vert","frag","loadShaderURL","resolveUrl","vcode","fcode","loadSound","opts","loadBean","bean_default","getSprite","getSound","getFont","getBitmapFont","getShader","getAsset","resolveSprite","resolveSound","snd","resolveShader","shader","resolveFont","bfont","volume","play","paused","srcNode","onEndEvents","gainNode","startTime","stopTime","started","getTime","start","d","cloneNode","oldNode","newNode","burp","vertSrc","fragSrc","vertShader","fragShader","prog","formatShaderError","msg","FMT","match","vertError","fragError","uniform","loc","chars","cols","charMap","drawRaw","verts","indices","fixed","shaderSrc","flush","transform","screen2ndc","frameStart","drawUnscaled","drawUVQuad","usePostEffect","frameEnd","ow","oh","drawTexture","pushMatrix","pushTranslate","pushScale","pushRotate","pushTransform","popTransform","color","opacity","uvPadX","uvPadY","qx","qy","scale","repX","repY","drawSprite","getArcPts","radiusX","radiusY","end","nverts","step","drawRect","drawPolygon","drawLine","drawLines","minSLen","drawCircle","drawTriangle","drawEllipse","polyOpt","npts","drawStenciled","content","mask","test","drawMasked","drawSubtracted","getViewportScale","applyCharTransform","fchar","TEXT_STYLE_RE","compileStyledText","charStyleMap","renderText","idxOffset","origIdx","fontAtlases","formatText","fontName","c2d","lineSpacing","letterSpacing","curX","tw","th","lines","curLine","cursor","lastSpace","lastSpaceWidth","fchars","line","ox","idx","style","drawText","drawFormattedText","ftext","windowToContent","contentToView","handleErr","debug","updateFrame","camPos","camScale","camRot","shake","intensity","toScreen","toWorld","calcTransform","obj","comps","compStates","cleanups","onCurCompCleanup","trigger","tag","comp","prop","func","checkDeps","dep","recurse","isChild","onAdd","onDestroy","ctrl","cb","event","onUpdate","add","onDraw","onCollide","col","onCollideUpdate","onCollideEnd","forAllCurrentAndFuture","get","onClick","onHover","onHoverUpdate","onHoverEnd","wait","actions","loop","curTimer","newAction","enterDebugMode","toFixed","enterBurpMode","setGravity","getGravity","setBackground","getBackground","speed","diff","rotate","easeFunc","tween","anchor","z","follow","move","dir","DEF_OFFSCREEN_DIS","offscreen","distance","isOut","screenRect","area","colliding","collidingThisFrame","mpos","hovering","localArea","getRenderProps","sprite","spriteData","curAnim","spriteLoadedEvent","calcTexScale","left","right","top","bottom","iw","ih","w1","w3","w2","h3","quads","uv","setSpriteData","onLoad","prevAnim","update","rect","uvquad","outline","timer","from","to","duration","setValue","curTime","DEF_JUMP_FORCE","MAX_VEL","body","vel","curPlatform","lastPlatformPos","wantFall","tmass","col2","prevVelY","force","doubleJump","numJumps","jumpsLeft","stay","scenesToStay","health","hp","maxHP","lifespan","fade","initState","stateList","transitions","initStateEvents","didFirstEnter","oldState","available","fadeIn","done","scene","def","go","onSceneLeave","getData","setData","plug","plugin","funcs","funcsObj","EdgeMask","tile","tilePos","isObstacle","cost","edges","getEdgeMask","loopup","edgeMask","level","is","addLevel","numRows","numColumns","spatialMap","costMap","edgeMap","connectivityMap","tile2Hash","hash2Tile","hash","createSpatialMap","insertIntoSpatialMap","removeFromSpatialMap","index","updateSpatialMap","spatialMapChanged","createCostMap","objects","createEdgeMap","createConnectivityMap","traverse","frontier","getNeighbours","getCost","node","neighbour","getHeuristic","goal","diagonals","levelComp","hasPos","hasTile","cameFrom","costSoFar","current","neighbours","next","newCost","row","keys","agent","target","navMapChangedEvent","record","frameRate","stream","audioDest","recorder","chunks","isFocused","destroy","readd","destroyAll","boom","kaSprite","ka_default","boomSprite","boom_default","addKaboom","kaboom","ka","Collision","source","resolved","checkFrame","grid","cellSize","stack","checkObj","aobj","bbox","xmin","ymin","xmax","ymax","checked","cell","check","col1","drawFrame","cam","drawLoadScreen","progress","drawInspectText","txt","pad","ftxt","bw","bh","drawDebug","inspecting","flipped","onLoading","onError","textStyle","title","onCleanup","numTextureUnits","unit","isFirstFrame","updateViewport","pd","ww","wh","rw","rc","sw","sh","rg","_kaboom","_interopRequireDefault","require","__esModule","default","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","forEach","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","Array","isArray","length","concat","Function","deps","cached","cache","some"],"mappings":"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","file":"script.baf0e655.js","sourceRoot":"..","sourcesContent":["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T extends RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\n// TODO: use x: number y: number (x, y, width, height)\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n","export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n","{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n","// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tpaused: false,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: paused should still process input\n\t\t\t// TODO: allow background actions?\n\t\t\tif (state.paused || document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchMove\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t\tget paused() {\n\t\t\treturn state.paused\n\t\t},\n\t\tset paused(p: boolean) {\n\t\t\tstate.paused = p\n\t\t},\n\t}\n\n}\n","// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n","export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n","const VERSION = \"3000.0.15\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tLoadSoundOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tEmptyComp,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\n// @ts-ignore\nimport beanSpriteSrc from \"./assets/bean.png\"\n// @ts-ignore\nimport burpSoundSrc from \"./assets/burp.mp3\"\n// @ts-ignore\nimport kaSpriteSrc from \"./assets/ka.png\"\n// @ts-ignore\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 1\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\tconst cw = canvas.width\n\tconst ch = canvas.height\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tclass Texture {\n\n\t\tsrc: null | TexImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: TexImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: TexImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: TexImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFrameBuffer: WebGLFramebuffer\n\t\tglRenderBuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFrameBuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderBuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderBuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glFrameBuffer)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.glRenderBuffer)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFrameBuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderBuffer)\n\t\t\tthis.tex.free()\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(gopt.width * pixelDensity, gopt.height * pixelDensity)\n\t\t\t: new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.enable(gl.SCISSOR_TEST)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t\tfixed: false,\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: TexImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\t// TODO: handle when audio context is unavailable\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch ${url}`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\toutline: number\n\t\tfilter: TexFilter\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.outline = opt.outline ?? 0\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | ArrayBuffer,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed TexImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: TexImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as TexImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t\topts: LoadSoundOpt = {},\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new Error(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = (gfx.fixed || fixed)\n\t\t\t? gfx.transform\n\t\t\t: game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\tgl.viewport(0, 0, gfx.frameBuffer.width, gfx.frameBuffer.height)\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.fixed = false\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: number,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: LoadFontOpt = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: 0,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline * 2\n\t\t\t\t\t\tc2d.strokeStyle = \"#000000\"\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline, atlas.outline)\n\t\t\t\t\t\tw += atlas.outline * 2\n\t\t\t\t\t\th += atlas.outline * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline, atlas.outline)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error) {\n\t\t\thandleErr(e.error)\n\t\t} else {\n\t\t\t// ignore errors from somewhere else, e.g. iframes\n\t\t\tif (e.message === \"Script error.\") return\n\n\t\t\thandleErr(new Error(e.message))\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => handleErr(e.reason)\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.drawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tconst style = msg instanceof Error ? \"error\" : \"info\"\n\t\t\tgame.logs.unshift(`${`[time]${app.time().toFixed(2)}[/time] `}[${style}]${msg?.toString ? msg.toString() : msg}[/${style}]`)\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tget paused() {\n\t\t\treturn app.paused\n\t\t},\n\t\tset paused(v) {\n\t\t\tapp.paused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt()\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tlet onCurCompCleanup = null\n\n\t\t// TODO: \"this\" should be typed here\n\t\tconst obj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\tpaused: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2>): GameObj<T2> {\n\t\t\t\tconst obj = (() => {\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\treturn make(a)\n\t\t\t\t\t}\n\t\t\t\t\tif (a.parent) {\n\t\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t\t}\n\t\t\t\t\treturn a\n\t\t\t\t})()\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: recursive\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp | FixedComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tconst f = gfx.fixed\n\t\t\t\tif (this.fixed) gfx.fixed = true\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.draw())\n\t\t\t\tpopTransform()\n\t\t\t\tgfx.fixed = f\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: a way to cancel the events?\n\t\t\t\t\tonAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tonDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\treturn this.fixed\n\t\t\t\t\t? this.pos\n\t\t\t\t\t: toScreen(this.pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): EmptyComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = toScreen(this.pos)\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: this.fixed,\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (this.fixed) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\t// TODO: clean up\n\t\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"text\",\n\t\t\ttext: t,\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\t// TODO: all children should be fixed\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\tconst maxHP = hp\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tmaxHP(): number {\n\t\t\t\treturn maxHP\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tenterDebugMode()\n\t\t\t}\n\n\t\t\tif (gopt.burp) {\n\t\t\t\tenterBurpMode()\n\t\t\t}\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T extends Record<string, any>>(plugin: KaboomPlugin<T>, ...args: any): KaboomCtx & T {\n\t\tconst funcs = plugin(ctx)\n\t\tlet funcsObj: T\n\t\tif (typeof funcs === \"function\") {\n\t\t\tconst plugWithOptions = funcs(...args)\n\t\t\tfuncsObj = plugWithOptions(ctx)\n\t\t}\n\t\telse {\n\t\t\tfuncsObj = funcs\n\t\t}\n\t\tfor (const k in funcsObj) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcsObj[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcsObj[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as KaboomCtx & T\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (!other.exists()) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tif (gopt.debug !== false) {\n\t\tenterDebugMode()\n\t}\n\n\tif (gopt.burp) {\n\t\tenterBurpMode()\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.name,\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\tframeStart()\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\t\t\tframeEnd()\n\t\t} else {\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tframeStart()\n\t\t\tdrawFrame()\n\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\tframeEnd()\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (app.isFullscreen()) {\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst sw = window.innerHeight * rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: wh,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = window.innerWidth / rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\t\twidth: ww,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\t// TODO: white artifact when scrolling, but disappears when done\n\t// TODO: if you resize to larger than the initial size it'll leave white space\n\t// TODO: this clears on scene change\n\tapp.onResize(() => {\n\t\tif (app.isFullscreen()) return\n\t\tconst fixedSize = gopt.width && gopt.height\n\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\tupdateViewport()\n\t\tif (!fixedSize) {\n\t\t\tgfx.frameBuffer.free()\n\t\t\tgfx.frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t}\n\t})\n\n\tupdateViewport()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tapp.canvas().focus()\n\n\treturn ctx\n\n}\n","import kaboom from \"kaboom\";\n\nkaboom();\n\nadd([\n    text(\"Hello\"),\n    pos(120, 80),\n]);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}